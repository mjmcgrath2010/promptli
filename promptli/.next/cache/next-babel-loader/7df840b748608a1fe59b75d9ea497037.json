{"ast":null,"code":"import { dashboardActionTypes } from '../../constants/index';\nimport API from '../../utils/api';\nconst dashboardActions = {\n  initDashboardRequest() {\n    return dispatch => {\n      this.initDashboard();\n      return API.initDashboard().then(({\n        data\n      }) => {\n        return dispatch(this.handleSuccess(dashboardActionTypes.INIT_DASHBOARD_SUCCESS, data));\n      }).catch(e => dispatch(this.handleError(dashboardActionTypes.INIT_DASHBOARD_FAILURE, e)));\n    };\n  },\n\n  initDashboard() {\n    return {\n      type: dashboardActionTypes.INIT_DASHBOARD_REQUEST\n    };\n  },\n\n  handleSuccess(type, payload) {\n    return {\n      type,\n      payload\n    };\n  },\n\n  handleError(type, payload) {\n    return {\n      type,\n      payload\n    };\n  },\n\n  connectGoogleAccountReq() {\n    return {\n      type: dashboardActionTypes.CONNECT_GOOGLE_ACCOUNT_REQUEST\n    };\n  },\n\n  connectGoogleAccount(payload) {\n    return dispatch => {\n      dispatch(this.connectGoogleAccountReq());\n      API.connectGoogleAccount(payload).then(({\n        data\n      }) => {\n        window.location = data;\n      }).catch(e => this.handleError(dashboardActionTypes.CONNECT_GOOGLE_ACCOUNT_FAILURE));\n    };\n  },\n\n  createServiceRequest(payload) {\n    return dispatch => {\n      dispatch(this.createService());\n      return API.createService(payload).then(({\n        data\n      }) => this.createServiceSucces(data));\n    };\n  },\n\n  createService() {\n    return {\n      type: dashboardActionTypes.CREATE_SERVICE_REQUEST\n    };\n  },\n\n  createServiceSucces(payload) {\n    return {\n      type: dashboardActionTypes.CREATE_SERVICE_SUCCESS,\n      payload\n    };\n  },\n\n  createPackage() {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_REQUEST\n    };\n  },\n\n  createPackageRequest(payload) {\n    return dispatch => {\n      dispatch(this.createPackage());\n      return API.createPackage(payload).then(({\n        data\n      }) => {\n        return dispatch(this.createPackageSuccess(data));\n      }).catch(e => this.createPackageError(e));\n    };\n  },\n\n  createPackageSuccess(payload) {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_SUCCESS,\n      payload\n    };\n  },\n\n  createPackageError(error) {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_FAILURE,\n      error\n    };\n  }\n\n};\nexport default dashboardActions;","map":{"version":3,"sources":["/app/actions/dashboard/index.js"],"names":["dashboardActionTypes","API","dashboardActions","initDashboardRequest","dispatch","initDashboard","then","data","handleSuccess","INIT_DASHBOARD_SUCCESS","catch","e","handleError","INIT_DASHBOARD_FAILURE","type","INIT_DASHBOARD_REQUEST","payload","connectGoogleAccountReq","CONNECT_GOOGLE_ACCOUNT_REQUEST","connectGoogleAccount","window","location","CONNECT_GOOGLE_ACCOUNT_FAILURE","createServiceRequest","createService","createServiceSucces","CREATE_SERVICE_REQUEST","CREATE_SERVICE_SUCCESS","createPackage","CREATE_PACKAGE_REQUEST","createPackageRequest","createPackageSuccess","createPackageError","CREATE_PACKAGE_SUCCESS","error","CREATE_PACKAGE_FAILURE"],"mappings":"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","sourcesContent":["import { dashboardActionTypes } from '../../constants/index'\nimport API from '../../utils/api'\n\nconst dashboardActions = {\n  initDashboardRequest() {\n    return dispatch => {\n      this.initDashboard()\n      return API.initDashboard()\n        .then(({ data }) => {\n          return dispatch(this.handleSuccess(dashboardActionTypes.INIT_DASHBOARD_SUCCESS, data))\n        })\n        .catch(e => dispatch(this.handleError(dashboardActionTypes.INIT_DASHBOARD_FAILURE, e)))\n    }\n  },\n  initDashboard() {\n    return { type: dashboardActionTypes.INIT_DASHBOARD_REQUEST }\n  },\n  handleSuccess(type, payload) {\n    return {\n      type,\n      payload,\n    }\n  },\n  handleError(type, payload) {\n    return {\n      type,\n      payload,\n    }\n  },\n  connectGoogleAccountReq() {\n    return {\n      type: dashboardActionTypes.CONNECT_GOOGLE_ACCOUNT_REQUEST,\n    }\n  },\n  connectGoogleAccount(payload) {\n    return dispatch => {\n      dispatch(this.connectGoogleAccountReq())\n      API.connectGoogleAccount(payload)\n        .then(({ data }) => {\n          window.location = data\n        })\n        .catch(e => this.handleError(dashboardActionTypes.CONNECT_GOOGLE_ACCOUNT_FAILURE))\n    }\n  },\n  createServiceRequest(payload) {\n    return dispatch => {\n      dispatch(this.createService())\n      return API.createService(payload).then(({ data }) => this.createServiceSucces(data))\n    }\n  },\n  createService() {\n    return {\n      type: dashboardActionTypes.CREATE_SERVICE_REQUEST,\n    }\n  },\n  createServiceSucces(payload) {\n    return {\n      type: dashboardActionTypes.CREATE_SERVICE_SUCCESS,\n      payload,\n    }\n  },\n  createPackage() {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_REQUEST,\n    }\n  },\n  createPackageRequest(payload) {\n    return dispatch => {\n      dispatch(this.createPackage())\n      return API.createPackage(payload)\n        .then(({ data }) => {\n          return dispatch(this.createPackageSuccess(data))\n        })\n        .catch(e => this.createPackageError(e))\n    }\n  },\n  createPackageSuccess(payload) {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_SUCCESS,\n      payload,\n    }\n  },\n  createPackageError(error) {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_FAILURE,\n      error,\n    }\n  },\n}\n\nexport default dashboardActions\n"]},"metadata":{},"sourceType":"module"}