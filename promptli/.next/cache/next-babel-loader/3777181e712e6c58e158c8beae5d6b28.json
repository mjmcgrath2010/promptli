{"ast":null,"code":"var _jsxFileName = \"/app/components/common/NavigationBreadCrumbs.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Router from 'next/router';\nimport { makeStyles } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    breadcrumb: {\n      color: '#fff'\n    }\n  };\n});\n\nvar NavigationBreadCrumbs = function NavigationBreadCrumbs(props) {\n  var _useState = useState([]),\n      breadcrumbs = _useState[0],\n      setBreadcrumbs = _useState[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    var handleBreadcrumbs = function handleBreadcrumbs(url) {\n      var breadcrumbs = url.split('/').filter(function (el) {\n        return !!el;\n      }).map(function (bc) {\n        return {\n          text: bc.toUpperCase()\n        };\n      });\n      setBreadcrumbs(breadcrumbs);\n    };\n\n    Router.events.on('routeChangeComplete', handleBreadcrumbs);\n    handleBreadcrumbs(window.location.pathname);\n    return function cleanup() {\n      Router.events.off('routeChangeComplete', handleBreadcrumbs);\n    };\n  }, []);\n  return __jsx(Breadcrumbs, {\n    className: classes.breadcrumb,\n    \"aria-label\": \"breadcrumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, breadcrumbs.map(function (breadcrumb) {\n    return __jsx(\"span\", {\n      className: classes.breadcrumb,\n      key: breadcrumb.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, breadcrumb.text);\n  }));\n};\n\nexport default NavigationBreadCrumbs;","map":{"version":3,"sources":["/app/components/common/NavigationBreadCrumbs.js"],"names":["React","useState","useEffect","Breadcrumbs","Router","makeStyles","useStyles","theme","breadcrumb","color","NavigationBreadCrumbs","props","breadcrumbs","setBreadcrumbs","classes","handleBreadcrumbs","url","split","filter","el","map","bc","text","toUpperCase","events","on","window","location","pathname","cleanup","off"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,IAAMC,SAAS,GAAGD,UAAU,CAAC,UAAAE,KAAK;AAAA,SAAK;AACrCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AADG;AADyB,GAAL;AAAA,CAAN,CAA5B;;AAMA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AAAA,kBACCV,QAAQ,CAAC,EAAD,CADT;AAAA,MAC9BW,WAD8B;AAAA,MACjBC,cADiB;;AAErC,MAAMC,OAAO,GAAGR,SAAS,EAAzB;AACAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,GAAG,EAAI;AAC/B,UAAMJ,WAAW,GAAGI,GAAG,CACpBC,KADiB,CACX,GADW,EAEjBC,MAFiB,CAEV,UAAAC,EAAE;AAAA,eAAI,CAAC,CAACA,EAAN;AAAA,OAFQ,EAGjBC,GAHiB,CAGb,UAAAC,EAAE;AAAA,eAAK;AACVC,UAAAA,IAAI,EAAED,EAAE,CAACE,WAAH;AADI,SAAL;AAAA,OAHW,CAApB;AAMAV,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD,KARD;;AASAR,IAAAA,MAAM,CAACoB,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCV,iBAAxC;AACAA,IAAAA,iBAAiB,CAACW,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAjB;AACA,WAAO,SAASC,OAAT,GAAmB;AACxBzB,MAAAA,MAAM,CAACoB,MAAP,CAAcM,GAAd,CAAkB,qBAAlB,EAAyCf,iBAAzC;AACD,KAFD;AAGD,GAfQ,EAeN,EAfM,CAAT;AAgBA,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAED,OAAO,CAACN,UAAhC;AAA4C,kBAAW,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,WAAW,CAACQ,GAAZ,CAAgB,UAAAZ,UAAU,EAAI;AAC7B,WACE;AAAM,MAAA,SAAS,EAAEM,OAAO,CAACN,UAAzB;AAAqC,MAAA,GAAG,EAAEA,UAAU,CAACc,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,UAAU,CAACc,IADd,CADF;AAKD,GANA,CADH,CADF;AAWD,CA9BD;;AAgCA,eAAeZ,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\nimport Router from 'next/router'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumb: {\n    color: '#fff',\n  },\n}))\n\nconst NavigationBreadCrumbs = props => {\n  const [breadcrumbs, setBreadcrumbs] = useState([])\n  const classes = useStyles()\n  useEffect(() => {\n    const handleBreadcrumbs = url => {\n      const breadcrumbs = url\n        .split('/')\n        .filter(el => !!el)\n        .map(bc => ({\n          text: bc.toUpperCase(),\n        }))\n      setBreadcrumbs(breadcrumbs)\n    }\n    Router.events.on('routeChangeComplete', handleBreadcrumbs)\n    handleBreadcrumbs(window.location.pathname)\n    return function cleanup() {\n      Router.events.off('routeChangeComplete', handleBreadcrumbs)\n    }\n  }, [])\n  return (\n    <Breadcrumbs className={classes.breadcrumb} aria-label=\"breadcrumb\">\n      {breadcrumbs.map(breadcrumb => {\n        return (\n          <span className={classes.breadcrumb} key={breadcrumb.text}>\n            {breadcrumb.text}\n          </span>\n        )\n      })}\n    </Breadcrumbs>\n  )\n}\n\nexport default NavigationBreadCrumbs\n"]},"metadata":{},"sourceType":"module"}