{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport _ from 'lodash';\nvar API_BASE_URL = process.env.API_BASE_URL;\nvar API = {\n  token: function token() {\n    return Cookies.get('token');\n  },\n  get: function get(resource) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return axios(_objectSpread({}, {\n      method: 'get',\n      url: \"\".concat(API_BASE_URL, \"/\").concat(resource),\n      headers: {\n        Authorization: \"JWT \".concat(this.token()),\n        'Content-Type': 'application/json'\n      }\n    }, config));\n  },\n  post: function post(resource, payload) {\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return axios(_objectSpread({}, {\n      method: 'post',\n      url: \"\".concat(API_BASE_URL, \"/\").concat(resource),\n      headers: {\n        Authorization: \"JWT \".concat(this.token()),\n        'Content-Type': 'application/json'\n      },\n      data: payload\n    }, config));\n  },\n  update: function update(resource, payload, id) {\n    var config = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    return axios(_objectSpread({}, {\n      method: 'put',\n      url: \"\".concat(API_BASE_URL, \"/\").concat(resource, \"/\").concat(id),\n      headers: {\n        Authorization: \"JWT \".concat(this.token()),\n        'Content-Type': 'application/json'\n      },\n      data: payload\n    }, config));\n  },\n  getTableData: function getTableData(resource, headersArray) {\n    var _this = this;\n\n    return this.get(resource).then(function (response) {\n      var data = response.data;\n\n      var headers = headersArray || _Object$keys(data[0]);\n\n      headers = headers.map(function (header) {\n        return {\n          field: header,\n          title: _.startCase(header.toUpperCase()),\n          type: _this.getDataType(data[0][header])\n        };\n      });\n      return new _Promise(function (resolve) {\n        return resolve({\n          columns: data,\n          headers: headers\n        });\n      });\n    })[\"catch\"](function (e) {\n      return new _Promise(function (resolve, reject) {\n        return reject('Something went wrong');\n      });\n    });\n  },\n  authenticate: function authenticate(_ref) {\n    var email = _ref.email,\n        password = _ref.password;\n    return this.post('auth', {\n      email: email,\n      password: password\n    });\n  },\n  logout: function logout() {\n    return this.get('auth/logout');\n  },\n  checkAuth: function checkAuth() {\n    return this.get('auth/check-auth');\n  },\n  connectGoogleAccount: function connectGoogleAccount(payload) {\n    return this.post('oauth/google/connect', payload);\n  },\n  forgotPassword: function forgotPassword(payload) {\n    return this.post('auth/forgot-password', payload);\n  },\n  resetPassword: function resetPassword(payload) {\n    return this.post('auth/reset-password', payload);\n  },\n  createUser: function createUser(_ref2) {\n    var email = _ref2.email,\n        password = _ref2.password,\n        name = _ref2.name;\n    return this.post('user', {\n      email: email,\n      password: password,\n      name: name\n    });\n  },\n  initDashboard: function initDashboard() {\n    return this.get('dashboard');\n  },\n  fetchProfile: function fetchProfile() {\n    return this.get('dashboard/me');\n  },\n  updateUser: function updateUser(id, payload) {\n    return this.update('user', payload, id);\n  },\n  updateAccount: function updateAccount(id, payload) {\n    return this.update('account', payload, id);\n  },\n  createPackage: function createPackage(payload) {\n    return this.post('packages', payload);\n  },\n  fetchPackages: function fetchPackages() {\n    return this.get('packages');\n  },\n  updatePackage: function updatePackage(id, payload) {\n    return this.update('packages', payload, id);\n  },\n  createService: function createService(payload) {\n    return this.post('services', payload);\n  },\n  fetchServices: function fetchServices() {\n    return this.get('services');\n  },\n  updateService: function updateService(id, payload) {\n    return this.update('services', payload, id);\n  },\n  fetchReservations: function fetchReservations() {\n    return this.get('reservations');\n  },\n  updateReservation: function updateReservation(id, payload) {\n    return this.update('reservations', payload, id);\n  },\n  // Utils\n  getDataType: function getDataType(type) {\n    switch (typeof type) {\n      case 'string':\n        return 'string';\n\n      case 'number':\n        return 'numeric';\n\n      case 'boolean':\n        return 'boolean';\n\n      default:\n        return 'string';\n    }\n  },\n  handleError: function handleError(_ref3) {\n    var error = _ref3.error;\n  },\n  handleSuccess: function handleSuccess(_ref4) {\n    var success = _ref4.success;\n  }\n};\nexport default API;","map":{"version":3,"sources":["/app/utils/api.js"],"names":["axios","Cookies","_","API_BASE_URL","process","env","API","token","get","resource","config","method","url","headers","Authorization","post","payload","data","update","id","getTableData","headersArray","then","response","map","header","field","title","startCase","toUpperCase","type","getDataType","resolve","columns","e","reject","authenticate","email","password","logout","checkAuth","connectGoogleAccount","forgotPassword","resetPassword","createUser","name","initDashboard","fetchProfile","updateUser","updateAccount","createPackage","fetchPackages","updatePackage","createService","fetchServices","updateService","fetchReservations","updateReservation","handleError","error","handleSuccess","success"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\nimport _ from 'lodash'\n\nconst { API_BASE_URL } = process.env\n\nconst API = {\n  token() {\n    return Cookies.get('token')\n  },\n  get(resource, config = {}) {\n    return axios({\n      ...{\n        method: 'get',\n        url: `${API_BASE_URL}/${resource}`,\n        headers: {\n          Authorization: `JWT ${this.token()}`,\n          'Content-Type': 'application/json',\n        },\n      },\n      ...config,\n    })\n  },\n  post(resource, payload, config = {}) {\n    return axios({\n      ...{\n        method: 'post',\n        url: `${API_BASE_URL}/${resource}`,\n        headers: {\n          Authorization: `JWT ${this.token()}`,\n          'Content-Type': 'application/json',\n        },\n        data: payload,\n      },\n      ...config,\n    })\n  },\n  update(resource, payload, id, config = {}) {\n    return axios({\n      ...{\n        method: 'put',\n        url: `${API_BASE_URL}/${resource}/${id}`,\n        headers: {\n          Authorization: `JWT ${this.token()}`,\n          'Content-Type': 'application/json',\n        },\n        data: payload,\n      },\n      ...config,\n    })\n  },\n  getTableData(resource, headersArray) {\n    return this.get(resource)\n      .then(response => {\n        const { data } = response\n        let headers = headersArray || Object.keys(data[0])\n\n        headers = headers.map(header => ({\n          field: header,\n          title: _.startCase(header.toUpperCase()),\n          type: this.getDataType(data[0][header]),\n        }))\n\n        return new Promise(resolve =>\n          resolve({\n            columns: data,\n            headers,\n          })\n        )\n      })\n      .catch(e => new Promise((resolve, reject) => reject('Something went wrong')))\n  },\n  authenticate({ email, password }) {\n    return this.post('auth', { email, password })\n  },\n  logout() {\n    return this.get('auth/logout')\n  },\n  checkAuth() {\n    return this.get('auth/check-auth')\n  },\n  connectGoogleAccount(payload) {\n    return this.post('oauth/google/connect', payload)\n  },\n  forgotPassword(payload) {\n    return this.post('auth/forgot-password', payload)\n  },\n  resetPassword(payload) {\n    return this.post('auth/reset-password', payload)\n  },\n  createUser({ email, password, name }) {\n    return this.post('user', { email, password, name })\n  },\n  initDashboard() {\n    return this.get('dashboard')\n  },\n  fetchProfile() {\n    return this.get('dashboard/me')\n  },\n  updateUser(id, payload) {\n    return this.update('user', payload, id)\n  },\n  updateAccount(id, payload) {\n    return this.update('account', payload, id)\n  },\n  createPackage(payload) {\n    return this.post('packages', payload)\n  },\n  fetchPackages() {\n    return this.get('packages')\n  },\n  updatePackage(id, payload) {\n    return this.update('packages', payload, id)\n  },\n  createService(payload) {\n    return this.post('services', payload)\n  },\n  fetchServices() {\n    return this.get('services')\n  },\n  updateService(id, payload) {\n    return this.update('services', payload, id)\n  },\n  fetchReservations() {\n    return this.get('reservations')\n  },\n  updateReservation(id, payload) {\n    return this.update('reservations', payload, id)\n  },\n  // Utils\n  getDataType(type) {\n    switch (typeof type) {\n      case 'string':\n        return 'string'\n      case 'number':\n        return 'numeric'\n      case 'boolean':\n        return 'boolean'\n      default:\n        return 'string'\n    }\n  },\n  handleError({ error }) {},\n  handleSuccess({ success }) {},\n}\n\nexport default API\n"]},"metadata":{},"sourceType":"module"}