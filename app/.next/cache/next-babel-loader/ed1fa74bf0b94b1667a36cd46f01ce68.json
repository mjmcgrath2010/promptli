{"ast":null,"code":"var __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport * as Sentry from '@sentry/browser';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../lib/theme';\nimport { appWithTranslation } from '../lib/i18n';\n\nif (process.env.SENTRY_DSN) {\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN_CLIENT\n  });\n}\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(PersistGate, {\n      persistor: reduxStore.__PERSISTOR,\n      loading: null\n    }, __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(CssBaseline, null), __jsx(Component, pageProps))));\n  }\n\n}\n\nexport default withReduxStore(appWithTranslation(MyApp));","map":null,"metadata":{},"sourceType":"module"}