{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    }\n  };\n});\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props));\n});\n\nvar FullScreenModal = function FullScreenModal(props) {\n  var btnText = props.btnText,\n      title = props.title,\n      saveText = props.saveText,\n      children = props.children,\n      onSave = props.onSave;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleSave = function handleSave() {\n    onSave();\n    setOpen(false);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen\n  }, btnText), __jsx(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleSave,\n    TransitionComponent: Transition\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\"\n  }, __jsx(CloseIcon, null)), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, title), __jsx(Button, {\n    autoFocus: true,\n    color: \"inherit\",\n    onClick: handleClose\n  }, saveText))), children));\n};\n\nFullScreenModal.defaultProps = {\n  saveText: 'Save',\n  onSave: function onSave() {}\n};\nexport default FullScreenModal;","map":null,"metadata":{},"sourceType":"module"}