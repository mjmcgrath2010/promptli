{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { dashboard, admin, auth } from './reducers/index';\nexport var initialState = {};\nvar rootReducer = combineReducers({\n  dashboard: dashboard,\n  admin: admin,\n  auth: auth\n});\nexport function initializeStore() {\n  var isClient = true;\n  var store;\n\n  if (isClient) {\n    var _require = require('redux-persist'),\n        persistReducer = _require.persistReducer;\n\n    var storage = require('redux-persist/lib/storage')[\"default\"];\n\n    var persistConfig = {\n      key: 'root',\n      storage: storage\n    };\n    store = createStore(persistReducer(persistConfig, rootReducer), initialState, composeWithDevTools(applyMiddleware(thunk)));\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n  }\n\n  return store;\n}","map":null,"metadata":{},"sourceType":"module"}