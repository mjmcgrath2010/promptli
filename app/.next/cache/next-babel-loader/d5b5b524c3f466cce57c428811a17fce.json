{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { dashboard, admin, auth } from './reducers/index';\nexport const initialState = {};\nconst rootReducer = combineReducers({\n  dashboard,\n  admin,\n  auth\n});\nexport function initializeStore() {\n  const isClient = false;\n  let store;\n\n  if (isClient) {\n    const {\n      persistReducer\n    } = require('redux-persist');\n\n    const storage = require('redux-persist/lib/storage').default;\n\n    const persistConfig = {\n      key: 'root',\n      storage\n    };\n    store = createStore(persistReducer(persistConfig, rootReducer), initialState, composeWithDevTools(applyMiddleware(thunk)));\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/app/store.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","persistStore","composeWithDevTools","dashboard","admin","auth","initialState","rootReducer","initializeStore","isClient","store","persistReducer","require","storage","default","persistConfig","key","__PERSISTOR"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,kBAAvC;AAEA,OAAO,MAAMC,YAAY,GAAG,EAArB;AAEP,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCI,EAAAA,SADgC;AAEhCC,EAAAA,KAFgC;AAGhCC,EAAAA;AAHgC,CAAD,CAAnC;AAMA,OAAO,SAASG,eAAT,GAA2B;AAC9B,QAAMC,QAAQ,QAAd;AACA,MAAIC,KAAJ;;AAEA,MAAID,QAAJ,EAAc;AACV,UAAM;AAAEE,MAAAA;AAAF,QAAqBC,OAAO,CAAC,eAAD,CAAlC;;AACA,UAAMC,OAAO,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,OAArD;;AACA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,GAAG,EAAE,MADa;AAElBH,MAAAA;AAFkB,KAAtB;AAIAH,IAAAA,KAAK,GAAGb,WAAW,CACfc,cAAc,CAACI,aAAD,EAAgBR,WAAhB,CADC,EAEfD,YAFe,EAGfJ,mBAAmB,CAACJ,eAAe,CAACE,KAAD,CAAhB,CAHJ,CAAnB;AAKAU,IAAAA,KAAK,CAACO,WAAN,GAAoBhB,YAAY,CAACS,KAAD,CAAhC;AACH,GAbD,MAaO;AACHA,IAAAA,KAAK,GAAGb,WAAW,CAACU,WAAD,EAAcD,YAAd,EAA4BR,eAAe,CAACE,KAAD,CAA3C,CAAnB;AACH;;AACD,SAAOU,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { dashboard, admin, auth } from './reducers/index'\n\nexport const initialState = {}\n\nconst rootReducer = combineReducers({\n    dashboard,\n    admin,\n    auth,\n})\n\nexport function initializeStore() {\n    const isClient = typeof window !== 'undefined'\n    let store\n\n    if (isClient) {\n        const { persistReducer } = require('redux-persist')\n        const storage = require('redux-persist/lib/storage').default\n        const persistConfig = {\n            key: 'root',\n            storage,\n        }\n        store = createStore(\n            persistReducer(persistConfig, rootReducer),\n            initialState,\n            composeWithDevTools(applyMiddleware(thunk))\n        )\n        store.__PERSISTOR = persistStore(store)\n    } else {\n        store = createStore(rootReducer, initialState, applyMiddleware(thunk))\n    }\n    return store\n}\n"]},"metadata":{},"sourceType":"module"}