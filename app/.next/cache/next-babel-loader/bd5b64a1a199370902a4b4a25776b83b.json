{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { loginActions } from '../actions/index';\nimport Cookies from 'js-cookie';\nimport Nav from '../components/nav';\nimport Form from '../components/common/Form';\nimport { withTranslation } from '../lib/i18n';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  _createClass(Login, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var token = Cookies.get('token');\n      return {\n        loggedIn: !!token,\n        namespacesRequired: ['login']\n      };\n    }\n  }]);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"forgotPassword\", function (e) {\n      e && e.preventDefault();\n      Router.push('/forgot-password');\n    });\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.getFormFields = _this.getFormFields.bind(_assertThisInitialized(_this));\n    _this.createAccount = _this.createAccount.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.checkAuth();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_ref) {\n      var _ref$target = _ref.target,\n          value = _ref$target.value,\n          name = _ref$target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"getFormFields\",\n    value: function getFormFields() {\n      return [{\n        name: 'email',\n        label: 'Email',\n        value: this.state.email,\n        type: 'email'\n      }, {\n        name: 'password',\n        label: 'Password',\n        value: this.state.password,\n        type: 'password'\n      }];\n    }\n  }, {\n    key: \"createAccount\",\n    value: function createAccount() {\n      Router.push('/create-account');\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e && e.preventDefault();\n                this.props.loginRequest(this.state);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      return __jsx(\"div\", {\n        className: \"jsx-2085888330\"\n      }, __jsx(Head, null, __jsx(\"title\", {\n        className: \"jsx-2085888330\"\n      }, \"Login\")), __jsx(Nav, null), __jsx(\"img\", {\n        style: {\n          margin: '8em auto 4em',\n          width: '225px',\n          display: 'block',\n          position: 'relative'\n        },\n        alt: \"logo\",\n        src: \"../static/logos/promptli-color.png\",\n        className: \"jsx-2085888330\"\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        submitBtnText: \"Login\",\n        fields: this.getFormFields(),\n        onChange: this.onChange,\n        title: t('title')\n      }), __jsx(\"div\", {\n        className: \"jsx-2085888330\"\n      }, __jsx(\"p\", {\n        style: {\n          textAlign: 'center',\n          width: '100%'\n        },\n        className: \"jsx-2085888330\"\n      }, this.props.t('noAccount'), ' ', __jsx(\"a\", {\n        style: {\n          cursor: 'pointer',\n          color: '#2a45ff'\n        },\n        role: \"button\",\n        onClick: this.createAccount,\n        className: \"jsx-2085888330\"\n      }, t('createAccount')), ' '), __jsx(\"p\", {\n        style: {\n          textAlign: 'center',\n          width: '100%'\n        },\n        className: \"jsx-2085888330\"\n      }, \"Forgot Password?\", ' ', __jsx(\"a\", {\n        style: {\n          cursor: 'pointer',\n          color: '#2a45ff'\n        },\n        role: \"button\",\n        onClick: this.forgotPassword,\n        className: \"jsx-2085888330\"\n      }, \"Click here to reset.\"), ' ')), __jsx(_JSXStyle, {\n        id: \"2085888330\"\n      }, []));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginRequest: function loginRequest(payload) {\n      dispatch(loginActions.makeLoginRequest(payload));\n    },\n    checkAuth: function checkAuth() {\n      return dispatch(loginActions.checkAuthRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation('login')(Login));","map":null,"metadata":{},"sourceType":"module"}