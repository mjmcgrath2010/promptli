{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport CalendarTile from './CalendarTile';\nimport CommonButton from '../CommonButton';\nconst CalendarContainer = styled.div.withConfig({\n  displayName: \"Calendar__CalendarContainer\",\n  componentId: \"pwm3t8-0\"\n})([\"display:inline-flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;width:100%;height:auto;flex:1;margin-bottom:24px;\"]);\nconst DayHeading = styled.div.withConfig({\n  displayName: \"Calendar__DayHeading\",\n  componentId: \"pwm3t8-1\"\n})([\"width:14%;font-size:14px;text-align:center;align-content:baseline;\"]);\nconst HeaderContainer = styled(CalendarContainer).withConfig({\n  displayName: \"Calendar__HeaderContainer\",\n  componentId: \"pwm3t8-2\"\n})([\"justify-content:space-evenly;margin-bottom:6px;\"]);\nconst HeaderItem = styled.div.withConfig({\n  displayName: \"Calendar__HeaderItem\",\n  componentId: \"pwm3t8-3\"\n})([\"width:33%;text-align:center;align-content:center;\"]);\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"lastMonth\", () => {\n      const lastMonth = this.state.startDate.subtract(1, 'months');\n      this.setState({\n        dates: this.getDisplayDates(lastMonth),\n        startDate: lastMonth\n      }, () => {\n        this.setState({\n          currentMonth: this.state.dates[8].format('MMMM YYYY')\n        });\n      });\n    });\n\n    _defineProperty(this, \"nextMonth\", () => {\n      const nextMonth = this.state.startDate.add(1, 'months');\n      this.setState({\n        dates: this.getDisplayDates(nextMonth),\n        startDate: nextMonth\n      }, () => {\n        this.setState({\n          currentMonth: this.state.dates[8].format('MMMM YYYY')\n        });\n      });\n    });\n\n    this.state = {\n      dates: [],\n      events: []\n    };\n  }\n\n  componentDidMount() {\n    this.initCalendar();\n  }\n\n  initCalendar() {\n    this.renderInitialDates();\n  }\n\n  renderHeadings() {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days.map(day => __jsx(DayHeading, {\n      key: day\n    }, day));\n  }\n\n  renderEvents() {}\n\n  currentDate() {\n    return moment();\n  }\n\n  fetchBookings() {// TODO: Fetch Bookings\n  }\n\n  renderInitialDates() {\n    const day = this.currentDate().format('DD');\n    const firstDayOfMonth = moment().subtract(day, 'days').add(1, 'day');\n    const startDateDay = firstDayOfMonth.day();\n    const endDate = moment().endOf('month');\n    let startDate;\n\n    if (startDateDay !== 0) {\n      startDate = firstDayOfMonth.subtract(startDateDay).add(1, 'day');\n    } else {\n      startDate = firstDayOfMonth;\n    }\n\n    this.setState({\n      dates: this.getDisplayDates(startDate),\n      currentMonth: this.currentDate().format('MMMM YYYY'),\n      startDate,\n      endDate\n    });\n  }\n\n  getDisplayDates(date) {\n    const dates = [];\n    let startDate = moment(date);\n\n    if (startDate.day()) {\n      startDate = startDate.subtract(startDate.day(), 'days');\n    }\n\n    for (let i = 0; i <= 34; i++) {\n      let offSet = moment(startDate);\n      dates.push(offSet.add(i, 'days'));\n    }\n\n    return dates;\n  }\n\n  addEvent() {}\n\n  deleteEvent() {}\n\n  render() {\n    return __jsx(Fragment, null, __jsx(HeaderContainer, null, __jsx(HeaderItem, null, __jsx(CommonButton, {\n      text: \"Previous\",\n      onClick: this.lastMonth\n    })), __jsx(HeaderItem, null, __jsx(\"h2\", null, this.state.currentMonth)), __jsx(HeaderItem, null, __jsx(CommonButton, {\n      text: \"Next\",\n      onClick: this.nextMonth\n    }))), __jsx(CalendarContainer, null, this.renderHeadings(), this.state.dates.map(day => __jsx(CalendarTile, null, day.format('DD')))));\n  }\n\n}\n\nCalendar.defaultProps = {};\nexport default Calendar;","map":null,"metadata":{},"sourceType":"module"}