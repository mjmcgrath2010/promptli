{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { loginActions } from '../actions/index';\nimport Cookies from 'js-cookie';\nimport Nav from '../components/nav';\nimport Form from '../components/common/Form';\n\nvar CreateAccount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateAccount, _React$Component);\n\n  function CreateAccount(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAccount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAccount).call(this, props));\n    _this.state = {\n      email: '',\n      password: '',\n      name: '',\n      confirmPassword: ''\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.getFormFields = _this.getFormFields.bind(_assertThisInitialized(_this));\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CreateAccount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.checkAuth();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(_ref) {\n      var _ref$target = _ref.target,\n          value = _ref$target.value,\n          name = _ref$target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"getFormFields\",\n    value: function getFormFields() {\n      return [{\n        name: 'name',\n        label: 'Name',\n        value: this.state.name,\n        type: 'email'\n      }, {\n        name: 'email',\n        label: 'Email',\n        value: this.state.email,\n        type: 'email'\n      }, {\n        name: 'password',\n        label: 'Password',\n        value: this.state.password,\n        type: 'password'\n      }, {\n        name: 'confirmPassword',\n        label: 'Confirm Password',\n        value: this.state.confirmPassword,\n        type: 'password'\n      }];\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      Router.push('/login');\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, email, password, name, confirmPassword;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e && e.preventDefault();\n                _this$state = this.state, email = _this$state.email, password = _this$state.password, name = _this$state.name, confirmPassword = _this$state.confirmPassword;\n\n                if (password !== confirmPassword) {\n                  alert('passwords must match');\n                } else {\n                  this.props.createAccount({\n                    email: email,\n                    password: password,\n                    name: name\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"jsx-2085888330\"\n      }, __jsx(Head, null, __jsx(\"title\", {\n        className: \"jsx-2085888330\"\n      }, \"Create Account\")), __jsx(Nav, null), __jsx(\"img\", {\n        style: {\n          margin: '8em auto 4em',\n          width: '225px',\n          display: 'block',\n          position: 'relative'\n        },\n        alt: \"logo\",\n        src: \"../static/logos/promptli-color.png\",\n        className: \"jsx-2085888330\"\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        submitBtnText: \"Create Account\",\n        fields: this.getFormFields(),\n        onChange: this.onChange,\n        title: \"Create an Account\"\n      }), __jsx(\"div\", {\n        className: \"jsx-2085888330\"\n      }, __jsx(\"p\", {\n        style: {\n          textAlign: 'center',\n          width: '100%'\n        },\n        className: \"jsx-2085888330\"\n      }, \"Already have an account?\", ' ', __jsx(\"a\", {\n        style: {\n          cursor: 'pointer',\n          color: '#2a45ff'\n        },\n        role: \"button\",\n        onClick: this.login,\n        className: \"jsx-2085888330\"\n      }, \"Click here to sign in.\"), ' ')), __jsx(_JSXStyle, {\n        id: \"2085888330\"\n      }, []));\n    }\n  }]);\n\n  return CreateAccount;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createAccount: function createAccount(payload) {\n      dispatch(loginActions.createUserRequest(payload));\n    },\n    checkAuth: function checkAuth() {\n      return dispatch(loginActions.checkAuthRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccount);","map":null,"metadata":{},"sourceType":"module"}