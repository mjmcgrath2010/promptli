{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { loginActionTypes } from '../constants/index';\nvar initialState = {\n  loading: false,\n  user: {},\n  token: {},\n  isLoggedIn: false\n};\n\nvar auth = function auth() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case loginActionTypes.LOGIN_REQUEST:\n      return _Object$assign({}, state, {\n        loading: true\n      });\n\n    case loginActionTypes.LOGIN_SUCCESS:\n      return _Object$assign({}, state, action.payload, {\n        isLoggedIn: true\n      });\n\n    case loginActionTypes.LOGIN_FAILURE:\n      return _Object$assign({}, state, {\n        error: action.payload\n      });\n\n    case loginActionTypes.AUTH_SUCCESS:\n      var payload = action.payload;\n      return _objectSpread({}, state, payload);\n\n    case loginActionTypes.LOGOUT_SUCCESS:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/app/reducers/login.js"],"names":["loginActionTypes","initialState","loading","user","token","isLoggedIn","auth","state","action","type","LOGIN_REQUEST","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","AUTH_SUCCESS","LOGOUT_SUCCESS"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,UAAU,EAAE;AAJK,CAArB;;AAOA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,gBAAgB,CAACU,aAAtB;AACI,aAAO,eAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC5BL,QAAAA,OAAO,EAAE;AADmB,OAAzB,CAAP;;AAGJ,SAAKF,gBAAgB,CAACW,aAAtB;AACI,aAAO,eAAc,EAAd,EAAkBJ,KAAlB,EAAyBC,MAAM,CAACI,OAAhC,EAAyC;AAC5CP,QAAAA,UAAU,EAAE;AADgC,OAAzC,CAAP;;AAGJ,SAAKL,gBAAgB,CAACa,aAAtB;AACI,aAAO,eAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC5BO,QAAAA,KAAK,EAAEN,MAAM,CAACI;AADc,OAAzB,CAAP;;AAGJ,SAAKZ,gBAAgB,CAACe,YAAtB;AAAA,UACYH,OADZ,GACwBJ,MADxB,CACYI,OADZ;AAEI,+BAAYL,KAAZ,EAAsBK,OAAtB;;AACJ,SAAKZ,gBAAgB,CAACgB,cAAtB;AACI,aAAOf,YAAP;;AACJ;AACI,aAAOM,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,IAAf","sourcesContent":["import { loginActionTypes } from '../constants/index'\n\nconst initialState = {\n    loading: false,\n    user: {},\n    token: {},\n    isLoggedIn: false,\n}\n\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        case loginActionTypes.LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                loading: true,\n            })\n        case loginActionTypes.LOGIN_SUCCESS:\n            return Object.assign({}, state, action.payload, {\n                isLoggedIn: true,\n            })\n        case loginActionTypes.LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n            })\n        case loginActionTypes.AUTH_SUCCESS:\n            const { payload } = action\n            return { ...state, ...payload }\n        case loginActionTypes.LOGOUT_SUCCESS:\n            return initialState\n        default:\n            return state\n    }\n}\n\nexport default auth\n"]},"metadata":{},"sourceType":"module"}