{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport * as Sentry from '@sentry/browser';\nimport styled from 'styled-components';\nimport TopNav from '../topNav';\nconst DashboardContainer = styled(Container).withConfig({\n  displayName: \"layouts__DashboardContainer\",\n  componentId: \"sc-1p7gadc-0\"\n})([\"margin-top:24px;\"]);\n\nclass DashboardLayout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"initDrift\", profile => {\n      'use strict';\n\n      const {\n        email,\n        name\n      } = profile;\n      !function () {\n        var t = window.driftt = window.drift = window.driftt || [];\n\n        if (!t.init) {\n          if (t.invoked) return void (window.console && console.error && console.error('Drift snippet included twice.'));\n          t.invoked = !0, t.methods = ['identify', 'config', 'track', 'reset', 'debug', 'show', 'ping', 'page', 'hide', 'off', 'on'], t.factory = function (e) {\n            return function () {\n              var n = Array.prototype.slice.call(arguments);\n              return n.unshift(e), t.push(n), t;\n            };\n          }, t.methods.forEach(function (e) {\n            t[e] = t.factory(e);\n          }), t.load = function (t) {\n            var e = 3e5,\n                n = Math.ceil(new Date() / e) * e,\n                o = document.createElement('script');\n            o.type = 'text/javascript', o.async = !0, o.crossorigin = 'anonymous', o.src = 'https://js.driftt.com/include/' + n + '/' + t + '.js';\n            var i = document.getElementsByTagName('script')[0];\n            i.parentNode.insertBefore(o, i);\n          };\n        }\n      }();\n      drift.SNIPPET_VERSION = '0.3.1';\n      drift.load('86kungi7t23i');\n      drift.identify(name, {\n        email\n      });\n    });\n  }\n\n  componentDidMount() {\n    const {\n      profile\n    } = this.props;\n\n    if (profile && profile.email) {\n      Sentry.configureScope(function (scope) {\n        scope.setUser({\n          email: profile.email\n        });\n      });\n      this.initDrift(profile);\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(TopNav, null), __jsx(DashboardContainer, {\n      fixed: true\n    }, this.props.children));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  profile: state.dashboard.profile\n});\n\nexport default connect(mapStateToProps, null)(DashboardLayout);","map":null,"metadata":{},"sourceType":"module"}