{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/app/pages/_app.js\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport * as Sentry from '@sentry/browser';\nimport withReduxStore from '../lib/with-redux-store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../lib/theme';\nimport { appWithTranslation } from '../lib/i18n';\n\nif (process.env.SENTRY_DSN) {\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN_CLIENT\n  });\n}\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(PersistGate, {\n      persistor: reduxStore.__PERSISTOR,\n      loading: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withReduxStore(appWithTranslation(MyApp));","map":{"version":3,"sources":["/app/pages/_app.js"],"names":["App","React","Sentry","withReduxStore","Provider","PersistGate","ThemeProvider","CssBaseline","theme","appWithTranslation","process","env","SENTRY_DSN","init","dsn","SENTRY_DSN_CLIENT","MyApp","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","render","Component","pageProps","reduxStore","props","__PERSISTOR"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,kBAAT,QAAmC,aAAnC;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,UAAhB,EAA4B;AAC1BV,EAAAA,MAAM,CAACW,IAAP,CAAY;AACVC,IAAAA,GAAG,EAAEJ,OAAO,CAACC,GAAR,CAAYI;AADP,GAAZ;AAGD;;AAED,MAAMC,KAAN,SAAoBhB,GAApB,CAAwB;AACtBiB,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACD;AACF;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,SAAS,EAAEA,UAAU,CAACE,WAAnC;AAAgD,MAAA,OAAO,EAAE,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEpB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,SAAD,eAAeiB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,CADF,CADF;AAUD;;AApBqB;;AAuBxB,eAAetB,cAAc,CAACM,kBAAkB,CAACO,KAAD,CAAnB,CAA7B","sourcesContent":["import App from 'next/app'\nimport React from 'react'\nimport * as Sentry from '@sentry/browser'\nimport withReduxStore from '../lib/with-redux-store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from '@material-ui/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from '../lib/theme'\nimport { appWithTranslation } from '../lib/i18n'\n\nif (process.env.SENTRY_DSN) {\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN_CLIENT,\n  })\n}\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side')\n    if (jssStyles) {\n      jssStyles.parentNode.removeChild(jssStyles)\n    }\n  }\n  render() {\n    const { Component, pageProps, reduxStore } = this.props\n    return (\n      <Provider store={reduxStore}>\n        <PersistGate persistor={reduxStore.__PERSISTOR} loading={null}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Component {...pageProps} />\n          </ThemeProvider>\n        </PersistGate>\n      </Provider>\n    )\n  }\n}\n\nexport default withReduxStore(appWithTranslation(MyApp))\n"]},"metadata":{},"sourceType":"module"}