{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { dashboard, admin, auth } from './reducers/index';\nexport var initialState = {};\nvar rootReducer = combineReducers({\n  dashboard: dashboard,\n  admin: admin,\n  auth: auth\n});\nexport function initializeStore() {\n  var isClient = true;\n  var store;\n\n  if (isClient) {\n    var _require = require('redux-persist'),\n        persistReducer = _require.persistReducer;\n\n    var storage = require('redux-persist/lib/storage')[\"default\"];\n\n    var persistConfig = {\n      key: 'root',\n      storage: storage\n    };\n    store = createStore(persistReducer(persistConfig, rootReducer), initialState, composeWithDevTools(applyMiddleware(thunk)));\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/app/store.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","persistStore","composeWithDevTools","dashboard","admin","auth","initialState","rootReducer","initializeStore","isClient","store","require","persistReducer","storage","persistConfig","key","__PERSISTOR"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,QAAuC,kBAAvC;AAEA,OAAO,IAAMC,YAAY,GAAG,EAArB;AAEP,IAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCI,EAAAA,SAAS,EAATA,SADgC;AAEhCC,EAAAA,KAAK,EAALA,KAFgC;AAGhCC,EAAAA,IAAI,EAAJA;AAHgC,CAAD,CAAnC;AAMA,OAAO,SAASG,eAAT,GAA2B;AAC9B,MAAMC,QAAQ,OAAd;AACA,MAAIC,KAAJ;;AAEA,MAAID,QAAJ,EAAc;AAAA,mBACiBE,OAAO,CAAC,eAAD,CADxB;AAAA,QACFC,cADE,YACFA,cADE;;AAEV,QAAMC,OAAO,GAAGF,OAAO,CAAC,2BAAD,CAAP,WAAhB;;AACA,QAAMG,aAAa,GAAG;AAClBC,MAAAA,GAAG,EAAE,MADa;AAElBF,MAAAA,OAAO,EAAPA;AAFkB,KAAtB;AAIAH,IAAAA,KAAK,GAAGb,WAAW,CACfe,cAAc,CAACE,aAAD,EAAgBP,WAAhB,CADC,EAEfD,YAFe,EAGfJ,mBAAmB,CAACJ,eAAe,CAACE,KAAD,CAAhB,CAHJ,CAAnB;AAKAU,IAAAA,KAAK,CAACM,WAAN,GAAoBf,YAAY,CAACS,KAAD,CAAhC;AACH,GAbD,MAaO;AACHA,IAAAA,KAAK,GAAGb,WAAW,CAACU,WAAD,EAAcD,YAAd,EAA4BR,eAAe,CAACE,KAAD,CAA3C,CAAnB;AACH;;AACD,SAAOU,KAAP;AACH","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { persistStore } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { dashboard, admin, auth } from './reducers/index'\n\nexport const initialState = {}\n\nconst rootReducer = combineReducers({\n    dashboard,\n    admin,\n    auth,\n})\n\nexport function initializeStore() {\n    const isClient = typeof window !== 'undefined'\n    let store\n\n    if (isClient) {\n        const { persistReducer } = require('redux-persist')\n        const storage = require('redux-persist/lib/storage').default\n        const persistConfig = {\n            key: 'root',\n            storage,\n        }\n        store = createStore(\n            persistReducer(persistConfig, rootReducer),\n            initialState,\n            composeWithDevTools(applyMiddleware(thunk))\n        )\n        store.__PERSISTOR = persistStore(store)\n    } else {\n        store = createStore(rootReducer, initialState, applyMiddleware(thunk))\n    }\n    return store\n}\n"]},"metadata":{},"sourceType":"module"}