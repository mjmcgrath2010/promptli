{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Link from 'next/link';\nimport { withStyles } from '@material-ui/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Icon from '@material-ui/core/Icon';\nimport { loginActions } from '../../actions';\nimport NavigationBreadCrumbs from '../common/NavigationBreadCrumbs';\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: '1em'\n  },\n  iconListItem: {\n    marginRight: '.5em'\n  },\n  breadcrumbs: {\n    justifyContent: 'space-evenly',\n    flex: 1,\n    textAlign: 'left'\n  },\n  list: {\n    width: 250\n  },\n  appName: {\n    position: 'absolute',\n    left: 'calc(50% - 75px)',\n    width: '150px',\n    textAlign: 'center',\n    zIndex: -1\n  },\n  drawerLogo: {\n    width: '100px',\n    margin: '.5em auto'\n  },\n  logo: {\n    width: '150px',\n    margin: '.5em auto 0'\n  },\n  navTitle: {\n    width: '100%',\n    textAlign: 'center',\n    fontSize: '18px',\n    display: 'block',\n    position: 'relative',\n    margin: '.5em auto 0'\n  }\n};\n\nclass TopNav extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"logOut\", () => {\n      this.props.logout();\n    });\n\n    this.state = {\n      open: false\n    };\n    this.onNavToggle = this.onNavToggle.bind(this);\n  }\n\n  onNavToggle() {\n    const nextState = !this.state.open;\n    this.setState({\n      open: nextState\n    });\n  }\n\n  renderPrimaryList() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(List, null, [{\n      text: 'Dashboard',\n      path: '/dashboard',\n      icon: 'home'\n    }, {\n      text: 'Reservations',\n      path: '/dashboard/reservations',\n      icon: 'insert_invitation'\n    }, {\n      text: 'Services',\n      path: '/dashboard/services',\n      icon: 'schedule'\n    }, {\n      text: 'Packages',\n      path: '/dashboard/packages',\n      icon: 'local_offer'\n    }, {\n      text: 'Design + Publish',\n      path: '/dashboard/design',\n      icon: 'build'\n    }].map(li => __jsx(Link, {\n      href: li.path,\n      key: li.path\n    }, __jsx(ListItem, {\n      button: true\n    }, __jsx(Icon, {\n      className: classes.iconListItem\n    }, li.icon), __jsx(ListItemText, {\n      primary: li.text\n    })))));\n  }\n\n  renderSecondaryList() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(List, null, [{\n      text: 'Profile',\n      path: '/dashboard/profile',\n      icon: 'account_box'\n    }, {\n      text: 'Settings',\n      path: '/dashboard/settings',\n      icon: 'settings_applications'\n    }].map(li => __jsx(Link, {\n      href: li.path,\n      key: li.path\n    }, __jsx(ListItem, {\n      button: true\n    }, __jsx(Icon, {\n      className: classes.iconListItem\n    }, li.icon), __jsx(ListItemText, {\n      primary: li.text\n    })))));\n  }\n\n  render() {\n    const {\n      profile,\n      isLoggedIn,\n      classes\n    } = this.props;\n    const {\n      open\n    } = this.state;\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(Drawer, {\n      open: open,\n      onClose: this.onNavToggle\n    }, __jsx(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: this.onNavToggle,\n      onKeyDown: this.onNavToggle\n    }, __jsx(\"div\", {\n      className: classes.navTitle\n    }, __jsx(\"img\", {\n      alt: \"logo\",\n      className: classes.drawerLogo,\n      src: \"../../static/logos/promptli-color.png\"\n    })), __jsx(Divider, null), this.renderPrimaryList(), __jsx(Divider, null), this.renderSecondaryList())), __jsx(AppBar, {\n      position: \"static\"\n    }, __jsx(Toolbar, null, __jsx(IconButton, {\n      edge: \"start\",\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: this.onNavToggle\n    }, __jsx(MenuIcon, null)), __jsx(\"div\", {\n      className: classes.breadcrumbs\n    }, __jsx(NavigationBreadCrumbs, null)), __jsx(\"div\", {\n      className: classes.appName\n    }, __jsx(\"img\", {\n      alt: \"logo\",\n      className: classes.logo,\n      src: \"../../static/logos/promptli-white.png\"\n    })), __jsx(Button, {\n      color: \"inherit\",\n      onClick: this.logOut\n    }, \"Logout\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.dashboard.profile,\n    isLoggedIn: state.auth.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  logout: () => dispatch(loginActions.makeLogoutRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TopNav));","map":null,"metadata":{},"sourceType":"module"}