{"ast":null,"code":"import { dashboardActionTypes } from '../../constants/index';\nimport API from '../../utils/api';\nconst dashboardActions = {\n  initDashboardRequest() {\n    return dispatch => {\n      this.initDashboard();\n      return API.initDashboard().then(({\n        data\n      }) => {\n        return dispatch(this.handleSuccess(dashboardActionTypes.INIT_DASHBOARD_SUCCESS, data));\n      }).catch(e => dispatch(this.handleError(dashboardActionTypes.INIT_DASHBOARD_FAILURE, e)));\n    };\n  },\n\n  initDashboard() {\n    return {\n      type: dashboardActionTypes.INIT_DASHBOARD_REQUEST\n    };\n  },\n\n  handleSuccess(type, payload) {\n    return {\n      type,\n      payload\n    };\n  },\n\n  handleError(type, payload) {\n    return {\n      type,\n      payload\n    };\n  },\n\n  connectGoogleAccountReq() {\n    return {\n      type: dashboardActionTypes.CONNECT_GOOGLE_ACCOUNT_REQUEST\n    };\n  },\n\n  connectGoogleAccount(payload) {\n    return dispatch => {\n      dispatch(this.connectGoogleAccountReq());\n      API.connectGoogleAccount(payload).then(({\n        data\n      }) => {\n        window.location = data;\n      }).catch(e => this.handleError(dashboardActionTypes.CONNECT_GOOGLE_ACCOUNT_FAILURE));\n    };\n  },\n\n  createServiceRequest(payload) {\n    return dispatch => {\n      dispatch(this.createService());\n      return API.createService(payload).then(({\n        data\n      }) => this.createServiceSucces(data));\n    };\n  },\n\n  createService() {\n    return {\n      type: dashboardActionTypes.CREATE_SERVICE_REQUEST\n    };\n  },\n\n  createServiceSucces(payload) {\n    return {\n      type: dashboardActionTypes.CREATE_SERVICE_SUCCESS,\n      payload\n    };\n  },\n\n  createPackage() {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_REQUEST\n    };\n  },\n\n  createPackageRequest(payload) {\n    return dispatch => {\n      dispatch(this.createPackage());\n      return API.createPackage(payload).then(({\n        data\n      }) => {\n        return dispatch(this.createPackageSuccess(data));\n      }).catch(e => this.createPackageError(e));\n    };\n  },\n\n  createPackageSuccess(payload) {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_SUCCESS,\n      payload\n    };\n  },\n\n  createPackageError(error) {\n    return {\n      type: dashboardActionTypes.CREATE_PACKAGE_FAILURE,\n      error\n    };\n  }\n\n};\nexport default dashboardActions;","map":null,"metadata":{},"sourceType":"module"}